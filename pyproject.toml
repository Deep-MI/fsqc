[build-system]
requires = ['setuptools >= 61.0.0']
build-backend = 'setuptools.build_meta'

[project]
name = 'fsqc'
description = 'Quality control scripts for FastSurfer and FreeSurfer structural MRI data'
license = {file = 'LICENSE'}
requires-python = '>=3.8'
authors = [
    {name = 'Kersten Diers', email = 'kersten.diers@dzne.de'},
    {name = 'Martin Reuter', email = 'martin.reuter@dzne.de'}
]
maintainers = [
    {name = 'Kersten Diers', email = 'kersten.diers@dzne.de'},
    {name = 'Martin Reuter', email = 'martin.reuter@dzne.de'}
]
keywords = [
    'FastSurfer',
    'FreeSurfer',
    'Quality control',
    'Quality assurance',
]
classifiers = [
    'Operating System :: Unix',
    'Operating System :: MacOS',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Natural Language :: English',
    'License :: OSI Approved :: MIT License',
    'Intended Audience :: Science/Research',
]
dynamic = ["version", "readme", "dependencies"]

[project.optional-dependencies]
build = [
    'build',
    'twine',
]
style = [
    'bibclean',
    'black',
    'codespell',
    'isort',
    'pydocstyle[toml]',
    'ruff',
]
test = [
    'pytest',
    'pytest-cov',
    'pytest-timeout',
]
all = [
    'fsqc[build]',
    'fsqc[style]',
]
full = [
    'fsqc[all]',
]

[project.urls]
homepage = 'https://github.com/Deep-MI/fsqc'
documentation = 'https://github.com/Deep-MI/fsqc'
source = 'https://github.com/Deep-MI/fsqc'
tracker = 'https://github.com/Deep-MI/fsqc/issues'

[project.scripts]
run_fsqc = 'fsqc.cli:main'

[tool.setuptools.dynamic]
version = {file = 'VERSION'}
readme = {file = 'DESCRIPTION.md', content-type = "text/markdown"}
dependencies = {file = 'requirements.txt'}

#[tool.setuptools] ### probably not needed
#include-package-data = false

[tool.setuptools.packages.find]
include = ['fsqc', 'fsqc.cli']
exclude = ['docker', 'singularity']

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
(
      __pycache__
    | \.github
    | setup.py
)
'''

[tool.isort]
profile = 'black'
multi_line_output = 3
line_length = 88
py_version = 38
extend_skip_glob = [
    'setup.py',
    'data/*',
    'examples/*',
]

[tool.pydocstyle]
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^fsqc.*'
add_ignore = 'D100,D104,D107'

[tool.ruff]
line-length = 88
extend-exclude = [
    "doc",
    "setup.py",
]
ignore = ["E501"] # line too long (black will do that)

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]


[tool.pytest.ini_options]
minversion = '6.0'
filterwarnings = []
addopts = [
    "--import-mode=importlib",
    "--junit-xml=junit-results.xml",
    "--durations=20",
    "--verbose",
]

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
    '**/__init__.py',
    '**/fsqc/_version.py',
    '**/fsqc/commands/*',
    '**/tests/**',
]

[tool.coverage.report]
exclude_lines = [
    'pragma: no cover',
    'if __name__ == .__main__.:',
]
precision = 2
